name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci:
    runs-on: ubuntu-latest
    container: archlinux
    strategy:
      matrix:
        compiler: [g++, clang++]

    steps:
      - uses: actions/checkout@v2

      - name: Install libraries and tools
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel clang lld llvm cmake wget unzip git \
          intel-tbb boost fmt nlohmann-json qt5-base
          wget https://github.com/Neargye/magic_enum/archive/v0.6.6.zip
          unzip v0.6.6.zip
          cd magic_enum-0.6.6
          mkdir build && cd build && cmake ..
          cmake --build . -j4
          make install
          git clone https://github.com/linux-test-project/lcov
          cd lcov
          make install
          wget http://search.cpan.org/CPAN/authors/id/N/NW/NWCLARK/PerlIO-gzip-0.20.tar.gz
          tar -xzvf PerlIO-gzip-0.20.tar.gz
          cd PerlIO-gzip-0.20
          perl Makefile.PL
          make -j4 && make install
          wget http://www.cpan.org/authors/id/M/MA/MAKAMAKA/JSON-2.90.tar.gz
          tar -xzvf JSON-2.90.tar.gz
          cd JSON-2.90
          perl Makefile.PL
          make -j4 && make install

      - name: CMake
        env:
          CXX: ${{ matrix.compiler }}
        run: mkdir build && cd build && cmake -DCOVERAGE=TRUE -DCLANG_TIDY=TRUE ..

      - name: Build
        run: cmake --build build -j4 --target all

      - name: Execute tests
        run: cd build && ctest -j1 --output-on-failure

      - name: Install
        run: cmake --build build -j4 --target install

      - name: Uninstall
        run: cmake --build build -j4 --target uninstall

      - name: Gather coverage data
        run: cmake --build build -j4 --target coverage

      - name: Codecov upload
        if: ${{ matrix.compiler == 'g++' }}
        uses: codecov/codecov-action@v1
        with:
          file: build/coverage.info
          fail_ci_if_error: true
